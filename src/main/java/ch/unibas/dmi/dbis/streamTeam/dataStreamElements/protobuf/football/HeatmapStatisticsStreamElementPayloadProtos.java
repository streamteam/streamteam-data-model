// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protobuf/streamTeam/football/heatmapStatisticsStreamElementPayload.proto

package ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football;

public final class HeatmapStatisticsStreamElementPayloadProtos {
  private HeatmapStatisticsStreamElementPayloadProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HeatmapStatisticsStreamElementPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:streamTeam.football.HeatmapStatisticsStreamElementPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of grid cells in x direction
     * </pre>
     *
     * <code>int32 numXGridCells = 1;</code>
     */
    int getNumXGridCells();

    /**
     * <pre>
     * Number of grid cells in y direction
     * </pre>
     *
     * <code>int32 numYGridCells = 2;</code>
     */
    int getNumYGridCells();

    /**
     * <pre>
     * Interval in s
     * </pre>
     *
     * <code>int64 intervalInS = 3;</code>
     */
    long getIntervalInS();

    /**
     * <pre>
     * Total number of cell entries
     * </pre>
     *
     * <code>int64 totalNum = 4;</code>
     */
    long getTotalNum();

    /**
     * <pre>
     * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
     * </pre>
     *
     * <code>string cells = 5;</code>
     */
    java.lang.String getCells();
    /**
     * <pre>
     * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
     * </pre>
     *
     * <code>string cells = 5;</code>
     */
    com.google.protobuf.ByteString
        getCellsBytes();
  }
  /**
   * <pre>
   * Payload of a heatmapStatistics stream element
   * </pre>
   *
   * Protobuf type {@code streamTeam.football.HeatmapStatisticsStreamElementPayload}
   */
  public  static final class HeatmapStatisticsStreamElementPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:streamTeam.football.HeatmapStatisticsStreamElementPayload)
      HeatmapStatisticsStreamElementPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeatmapStatisticsStreamElementPayload.newBuilder() to construct.
    private HeatmapStatisticsStreamElementPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeatmapStatisticsStreamElementPayload() {
      cells_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HeatmapStatisticsStreamElementPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeatmapStatisticsStreamElementPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              numXGridCells_ = input.readInt32();
              break;
            }
            case 16: {

              numYGridCells_ = input.readInt32();
              break;
            }
            case 24: {

              intervalInS_ = input.readInt64();
              break;
            }
            case 32: {

              totalNum_ = input.readInt64();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              cells_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload.class, ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload.Builder.class);
    }

    public static final int NUMXGRIDCELLS_FIELD_NUMBER = 1;
    private int numXGridCells_;
    /**
     * <pre>
     * Number of grid cells in x direction
     * </pre>
     *
     * <code>int32 numXGridCells = 1;</code>
     */
    public int getNumXGridCells() {
      return numXGridCells_;
    }

    public static final int NUMYGRIDCELLS_FIELD_NUMBER = 2;
    private int numYGridCells_;
    /**
     * <pre>
     * Number of grid cells in y direction
     * </pre>
     *
     * <code>int32 numYGridCells = 2;</code>
     */
    public int getNumYGridCells() {
      return numYGridCells_;
    }

    public static final int INTERVALINS_FIELD_NUMBER = 3;
    private long intervalInS_;
    /**
     * <pre>
     * Interval in s
     * </pre>
     *
     * <code>int64 intervalInS = 3;</code>
     */
    public long getIntervalInS() {
      return intervalInS_;
    }

    public static final int TOTALNUM_FIELD_NUMBER = 4;
    private long totalNum_;
    /**
     * <pre>
     * Total number of cell entries
     * </pre>
     *
     * <code>int64 totalNum = 4;</code>
     */
    public long getTotalNum() {
      return totalNum_;
    }

    public static final int CELLS_FIELD_NUMBER = 5;
    private volatile java.lang.Object cells_;
    /**
     * <pre>
     * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
     * </pre>
     *
     * <code>string cells = 5;</code>
     */
    public java.lang.String getCells() {
      java.lang.Object ref = cells_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cells_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
     * </pre>
     *
     * <code>string cells = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCellsBytes() {
      java.lang.Object ref = cells_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cells_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (numXGridCells_ != 0) {
        output.writeInt32(1, numXGridCells_);
      }
      if (numYGridCells_ != 0) {
        output.writeInt32(2, numYGridCells_);
      }
      if (intervalInS_ != 0L) {
        output.writeInt64(3, intervalInS_);
      }
      if (totalNum_ != 0L) {
        output.writeInt64(4, totalNum_);
      }
      if (!getCellsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, cells_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numXGridCells_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numXGridCells_);
      }
      if (numYGridCells_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numYGridCells_);
      }
      if (intervalInS_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, intervalInS_);
      }
      if (totalNum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, totalNum_);
      }
      if (!getCellsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, cells_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload)) {
        return super.equals(obj);
      }
      ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload other = (ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload) obj;

      if (getNumXGridCells()
          != other.getNumXGridCells()) return false;
      if (getNumYGridCells()
          != other.getNumYGridCells()) return false;
      if (getIntervalInS()
          != other.getIntervalInS()) return false;
      if (getTotalNum()
          != other.getTotalNum()) return false;
      if (!getCells()
          .equals(other.getCells())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUMXGRIDCELLS_FIELD_NUMBER;
      hash = (53 * hash) + getNumXGridCells();
      hash = (37 * hash) + NUMYGRIDCELLS_FIELD_NUMBER;
      hash = (53 * hash) + getNumYGridCells();
      hash = (37 * hash) + INTERVALINS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIntervalInS());
      hash = (37 * hash) + TOTALNUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalNum());
      hash = (37 * hash) + CELLS_FIELD_NUMBER;
      hash = (53 * hash) + getCells().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Payload of a heatmapStatistics stream element
     * </pre>
     *
     * Protobuf type {@code streamTeam.football.HeatmapStatisticsStreamElementPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:streamTeam.football.HeatmapStatisticsStreamElementPayload)
        ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload.class, ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload.Builder.class);
      }

      // Construct using ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        numXGridCells_ = 0;

        numYGridCells_ = 0;

        intervalInS_ = 0L;

        totalNum_ = 0L;

        cells_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_descriptor;
      }

      @java.lang.Override
      public ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload getDefaultInstanceForType() {
        return ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload.getDefaultInstance();
      }

      @java.lang.Override
      public ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload build() {
        ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload buildPartial() {
        ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload result = new ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload(this);
        result.numXGridCells_ = numXGridCells_;
        result.numYGridCells_ = numYGridCells_;
        result.intervalInS_ = intervalInS_;
        result.totalNum_ = totalNum_;
        result.cells_ = cells_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload) {
          return mergeFrom((ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload other) {
        if (other == ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload.getDefaultInstance()) return this;
        if (other.getNumXGridCells() != 0) {
          setNumXGridCells(other.getNumXGridCells());
        }
        if (other.getNumYGridCells() != 0) {
          setNumYGridCells(other.getNumYGridCells());
        }
        if (other.getIntervalInS() != 0L) {
          setIntervalInS(other.getIntervalInS());
        }
        if (other.getTotalNum() != 0L) {
          setTotalNum(other.getTotalNum());
        }
        if (!other.getCells().isEmpty()) {
          cells_ = other.cells_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int numXGridCells_ ;
      /**
       * <pre>
       * Number of grid cells in x direction
       * </pre>
       *
       * <code>int32 numXGridCells = 1;</code>
       */
      public int getNumXGridCells() {
        return numXGridCells_;
      }
      /**
       * <pre>
       * Number of grid cells in x direction
       * </pre>
       *
       * <code>int32 numXGridCells = 1;</code>
       */
      public Builder setNumXGridCells(int value) {
        
        numXGridCells_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of grid cells in x direction
       * </pre>
       *
       * <code>int32 numXGridCells = 1;</code>
       */
      public Builder clearNumXGridCells() {
        
        numXGridCells_ = 0;
        onChanged();
        return this;
      }

      private int numYGridCells_ ;
      /**
       * <pre>
       * Number of grid cells in y direction
       * </pre>
       *
       * <code>int32 numYGridCells = 2;</code>
       */
      public int getNumYGridCells() {
        return numYGridCells_;
      }
      /**
       * <pre>
       * Number of grid cells in y direction
       * </pre>
       *
       * <code>int32 numYGridCells = 2;</code>
       */
      public Builder setNumYGridCells(int value) {
        
        numYGridCells_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of grid cells in y direction
       * </pre>
       *
       * <code>int32 numYGridCells = 2;</code>
       */
      public Builder clearNumYGridCells() {
        
        numYGridCells_ = 0;
        onChanged();
        return this;
      }

      private long intervalInS_ ;
      /**
       * <pre>
       * Interval in s
       * </pre>
       *
       * <code>int64 intervalInS = 3;</code>
       */
      public long getIntervalInS() {
        return intervalInS_;
      }
      /**
       * <pre>
       * Interval in s
       * </pre>
       *
       * <code>int64 intervalInS = 3;</code>
       */
      public Builder setIntervalInS(long value) {
        
        intervalInS_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interval in s
       * </pre>
       *
       * <code>int64 intervalInS = 3;</code>
       */
      public Builder clearIntervalInS() {
        
        intervalInS_ = 0L;
        onChanged();
        return this;
      }

      private long totalNum_ ;
      /**
       * <pre>
       * Total number of cell entries
       * </pre>
       *
       * <code>int64 totalNum = 4;</code>
       */
      public long getTotalNum() {
        return totalNum_;
      }
      /**
       * <pre>
       * Total number of cell entries
       * </pre>
       *
       * <code>int64 totalNum = 4;</code>
       */
      public Builder setTotalNum(long value) {
        
        totalNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total number of cell entries
       * </pre>
       *
       * <code>int64 totalNum = 4;</code>
       */
      public Builder clearTotalNum() {
        
        totalNum_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object cells_ = "";
      /**
       * <pre>
       * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
       * </pre>
       *
       * <code>string cells = 5;</code>
       */
      public java.lang.String getCells() {
        java.lang.Object ref = cells_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cells_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
       * </pre>
       *
       * <code>string cells = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCellsBytes() {
        java.lang.Object ref = cells_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cells_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
       * </pre>
       *
       * <code>string cells = 5;</code>
       */
      public Builder setCells(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cells_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
       * </pre>
       *
       * <code>string cells = 5;</code>
       */
      public Builder clearCells() {
        
        cells_ = getDefaultInstance().getCells();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String specifying the cells of the heatmap: val1;val2;... (val=0x5 means a sequence of five 0)
       * </pre>
       *
       * <code>string cells = 5;</code>
       */
      public Builder setCellsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cells_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:streamTeam.football.HeatmapStatisticsStreamElementPayload)
    }

    // @@protoc_insertion_point(class_scope:streamTeam.football.HeatmapStatisticsStreamElementPayload)
    private static final ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload();
    }

    public static ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HeatmapStatisticsStreamElementPayload>
        PARSER = new com.google.protobuf.AbstractParser<HeatmapStatisticsStreamElementPayload>() {
      @java.lang.Override
      public HeatmapStatisticsStreamElementPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeatmapStatisticsStreamElementPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HeatmapStatisticsStreamElementPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HeatmapStatisticsStreamElementPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ch.unibas.dmi.dbis.streamTeam.dataStreamElements.protobuf.football.HeatmapStatisticsStreamElementPayloadProtos.HeatmapStatisticsStreamElementPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nQsrc/main/protobuf/streamTeam/football/" +
      "heatmapStatisticsStreamElementPayload.pr" +
      "oto\022\023streamTeam.football\"\213\001\n%HeatmapStat" +
      "isticsStreamElementPayload\022\025\n\rnumXGridCe" +
      "lls\030\001 \001(\005\022\025\n\rnumYGridCells\030\002 \001(\005\022\023\n\013inte" +
      "rvalInS\030\003 \001(\003\022\020\n\010totalNum\030\004 \001(\003\022\r\n\005cells" +
      "\030\005 \001(\tBq\nBch.unibas.dmi.dbis.streamTeam." +
      "dataStreamElements.protobuf.footballB+He" +
      "atmapStatisticsStreamElementPayloadProto" +
      "sb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_streamTeam_football_HeatmapStatisticsStreamElementPayload_descriptor,
        new java.lang.String[] { "NumXGridCells", "NumYGridCells", "IntervalInS", "TotalNum", "Cells", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
